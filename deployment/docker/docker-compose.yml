version: '3.8'

services:
  # 前端服务
  frontend:
    build: 
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:3000
    networks:
      - app-network

  # 后端服务
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/education
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://rabbitmq:5672
      - JWT_SECRET=your-secret-key
      - NODE_ENV=production
    networks:
      - app-network

  # MongoDB 数据库
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # Redis 缓存
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  # Prometheus 监控
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  # Grafana 监控面板
  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network

  # ELK Stack
  elasticsearch:
    image: elasticsearch:8.12.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app-network

  logstash:
    image: logstash:8.12.0
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    networks:
      - app-network

  kibana:
    image: kibana:8.12.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

volumes:
  mongodb_data:
  redis_data:
  grafana_data:
  elasticsearch_data:

networks:
  app-network:
    driver: bridge 