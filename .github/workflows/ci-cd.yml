name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Dependencies
      run: |
        cd frontend && npm install
        cd ../backend && npm install
        
    - name: Run Unit Tests
      run: |
        cd frontend && npm run test:unit
        cd ../backend && npm run test:unit
        
    - name: Run Integration Tests
      run: |
        cd frontend && npm run test:integration
        cd ../backend && npm run test:integration
        
    - name: Run E2E Tests
      run: |
        cd frontend && npm run test:e2e
        cd ../backend && npm run test:e2e
        
    - name: Run Linting
      run: |
        cd frontend && npm run lint
        cd ../backend && npm run lint

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          frontend/test-results
          backend/test-results

  performance:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install k6
      run: |
        curl https://github.com/grafana/k6/releases/download/v0.45.0/k6-v0.45.0-linux-amd64.tar.gz -L | tar xvz --strip-components=1
    
    - name: Run Performance Tests
      run: |
        ./k6 run tests/performance/k6.config.js
        
    - name: Upload Performance Results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results

  security:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: ZAP Scan
      uses: zaproxy/action-full-scan@v0.9.0
      with:
        target: 'http://education-system.com'
        config_file: './tests/security/zap-config.yaml'
        
    - name: Upload Security Results
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: security-reports

  build:
    needs: [test, performance, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: education-system/frontend:latest
        
    - name: Build and push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: education-system/backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment/kubernetes/config/
        kubectl rollout restart deployment frontend -n education-system
        kubectl rollout restart deployment backend -n education-system
        
    - name: Verify Deployment
      run: |
        kubectl get pods -n education-system
        kubectl get services -n education-system
        
    - name: Clean up
      run: rm kubeconfig.yaml 